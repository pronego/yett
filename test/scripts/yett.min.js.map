{"version":3,"file":"yett.min.js","sources":["../../src/checks.js","../../src/variables.js","../../src/observer.js","../../src/monkey.js","../../src/unblock.js"],"sourcesContent":["import { patterns, TYPE_ATTRIBUTE } from './variables'\n\nexport const isOnBlacklist = (src, type) => (\n    src && (!type || type !== TYPE_ATTRIBUTE) &&\n    isBlacklistedSource(src)\n\n)\n\nexport const isBlacklistedSource = function(src) {\n  const srcStart = src === undefined ? \"\" : src.toString().split(\"?\")[0];\n  return srcStart &&\n  (\n    (!patterns.blacklist || patterns.blacklist.some(pattern => pattern.test(srcStart))) &&\n    (!patterns.whitelist || patterns.whitelist.every(pattern => !pattern.test(srcStart)))\n  )\n}\n\nexport const willBeUnblocked = function(script) {\n    const src = script.getAttribute('src')\n    return (\n        patterns.blacklist && patterns.blacklist.every(entry => !entry.test(src)) ||\n        patterns.whitelist && patterns.whitelist.some(entry => entry.test(src))\n    )\n}\n","export const TYPE_ATTRIBUTE = 'javascript/blocked'\nexport const HIDDEN_SRC_ATTRIBUTE = 'yett-src'\n\nexport const patterns = {\n    blacklist: window.YETT_BLACKLIST,\n    whitelist: window.YETT_WHITELIST\n}\n\nexport const features = {\n    iframe: window.YETT_IFRAME,\n    iframe_blocked_text: window.YETT_IFRAME_BLOCKED_TEXT || 'Blocked iframe content!',\n    iframe_blocked_btn_unblock: window.YETT_IFRAME_BLOCKED_BTN || 'Unblock',\n}\n\n// Backup list containing the original blacklisted elements\nexport const backupElements = {\n    blacklisted: []\n}\n","import {backupElements, TYPE_ATTRIBUTE, features} from './variables'\nimport { isOnBlacklist } from './checks'\n\n// Setup a mutation observer to track DOM insertion\nexport const observer = new MutationObserver(mutations => {\n    for (let i = 0; i < mutations.length; i++) {\n        const { addedNodes } = mutations[i];\n        for(let i = 0; i < addedNodes.length; i++) {\n            const node = addedNodes[i]\n\n            // For each added script or iframe tag; nodeType=1 represents an Element node like <p> or <div>.\n            if(node.nodeType === 1 && (node.tagName === 'SCRIPT' || (features.iframe && node.tagName === 'IFRAME'))) {\n                const src = node.src || node.getAttribute('yett-src')\n                const type = node.type\n\n                // If the src is inside the blacklist and is not inside the whitelist\n                if(isOnBlacklist(src, type)) {\n\n                    // We backup the node\n                    backupElements.blacklisted.push([node, node.type])\n\n                   // Blocks inline script execution in Safari & Chrome\n                   node.type = TYPE_ATTRIBUTE\n\n                    // Firefox has this additional event which prevents scripts from beeing executed\n                    const beforeScriptExecuteListener = function (event) {\n                        // Prevent only marked scripts from executing\n                        if(node.getAttribute('type') === TYPE_ATTRIBUTE)\n                            event.preventDefault()\n                        node.removeEventListener('beforescriptexecute', beforeScriptExecuteListener)\n                    }\n                    node.addEventListener('beforescriptexecute', beforeScriptExecuteListener)\n\n                    // In case of iframe feature, add placeholder block\n                    if (features.iframe && node.tagName === 'IFRAME') {\n                        let iframePlaceholder = document.createElement('div')\n                        iframePlaceholder.setAttribute('data-src', src)\n                        // Copy styles from iframe\n                        iframePlaceholder.style.cssText = document.defaultView.getComputedStyle(node, '').cssText\n                        // Set background color + special styles\n                        iframePlaceholder.style.backgroundColor = '#dedede'\n                        iframePlaceholder.style.display = 'flex'\n                        iframePlaceholder.style.alignItems = 'center'\n                        iframePlaceholder.style.justifyContent = 'center'\n                        iframePlaceholder.style.width = node.getAttribute('width')+'px'\n                        iframePlaceholder.style.height = node.getAttribute('height')+'px'\n                        iframePlaceholder.style.maxWidth = '100%'\n                        iframePlaceholder.classList.add('iframe-blocked')\n                        // Add text + Button\n                        iframePlaceholder.innerHTML = '<p style=\"text-align: center\">'+features.iframe_blocked_text+'<br/><button onclick=\"yett.unblock(\\''+src+'\\')>'+features.iframe_blocked_btn_unblock+'</button></p>'\n                        node.parentElement && node.parentElement.insertBefore(iframePlaceholder, node)\n                    }\n\n                    // Remove the node from the DOM\n                    node.parentElement && node.parentElement.removeChild(node)\n                }\n            }\n        }\n    }\n})\n\n// Starts the monitoring\nobserver.observe(document.documentElement, {\n    childList: true,\n    subtree: true\n})\n","import { TYPE_ATTRIBUTE, HIDDEN_SRC_ATTRIBUTE } from './variables'\nimport { isOnBlacklist } from './checks'\n\nconst createElementBackup = document.createElement\n\nvar originalDescriptors = {\n    script: {\n      class: HTMLScriptElement,\n      src: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'src'),\n      type: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'type')\n    }\n}\n\n// Monkey patch the createElement method to prevent dynamic scripts from executing\ndocument.createElement = function(...args) {\n    // If this is not a patched tag, bypass\n    const tagName = args[0].toLowerCase()\n    const descriptors = originalDescriptors[tagName]\n    if(descriptors === undefined)\n        return createElementBackup.bind(document)(...args)\n\n    const mockElt = createElementBackup.bind(document)(...args)\n\n    // Define getters / setters to ensure that the script type is properly set\n    try {\n        Object.defineProperties(mockElt, {\n            'src': {\n                get() {\n                    return descriptors.src.get.call(this)\n                },\n                set(value) {\n                    if(isOnBlacklist(value, mockElt.type)) {\n                        if (descriptors.type) {\n                          descriptors.type.set.call(this, TYPE_ATTRIBUTE)\n                        } else {\n                          descriptors.class.prototype.setAttribute.call(this, HIDDEN_SRC_ATTRIBUTE, value)\n                          value = undefined\n                        }\n                    }\n\n                    if(value !== undefined)\n                      descriptors.src.set.call(this, value)\n                }\n            },\n            'type': {\n                set(value) {\n                    const typeValue = isOnBlacklist(mockElt.src, mockElt.type) ? TYPE_ATTRIBUTE : value\n                    descriptors.type.set.call(this, typeValue)\n                }\n            }\n        })\n\n        // Monkey patch the setAttribute function so that the setter is called instead\n        mockElt.setAttribute = function(name, value) {\n            if(name === 'type' || name === 'src') {\n                mockElt[name] = value\n            } else\n                descriptors.class.prototype.setAttribute.call(mockElt, name, value)\n        }\n    } catch (error) {\n        // eslint-disable-next-line\n        console.warn(\n            'Yett: unable to prevent script execution for ' + tagName + ' src ', mockElt.src, '.\\n',\n            'A likely cause would be because you are using a third-party browser extension that monkey patches the \"document.createElement\" function.'\n        )\n    }\n    return mockElt\n}\n","import {\n    patterns,\n    backupElements,\n    TYPE_ATTRIBUTE,\n    HIDDEN_SRC_ATTRIBUTE\n} from './variables'\n\nimport {\n    willBeUnblocked\n} from './checks'\n\nimport {\n    observer\n} from './observer'\n\nconst URL_REPLACER_REGEXP = new RegExp('[|\\\\{}()[\\\\]^$+*?.]', 'g')\n\n// Unblocks all (or a selection of) blacklisted scripts.\nexport const unblock = function(...scriptUrlsOrRegexes) {\n    if(scriptUrlsOrRegexes.length < 1) {\n        patterns.blacklist = []\n        patterns.whitelist = []\n    } else {\n        if(patterns.blacklist) {\n            patterns.blacklist = patterns.blacklist.filter(pattern => (\n                scriptUrlsOrRegexes.every(urlOrRegexp => {\n                    if(typeof urlOrRegexp === 'string')\n                        return !pattern.test(urlOrRegexp)\n                    else if(urlOrRegexp instanceof RegExp)\n                        return pattern.toString() !== urlOrRegexp.toString()\n                })\n            ))\n        }\n        if(patterns.whitelist) {\n            patterns.whitelist = [\n                ...patterns.whitelist,\n                ...scriptUrlsOrRegexes\n                    .map(urlOrRegexp => {\n                        if(typeof urlOrRegexp === 'string') {\n                            const escapedUrl = urlOrRegexp.replace(URL_REPLACER_REGEXP, '\\\\$&')\n                            const permissiveRegexp = '.*' + escapedUrl + '.*'\n                            if(patterns.whitelist.every(p => p.toString() !== permissiveRegexp.toString())) {\n                                return new RegExp(permissiveRegexp)\n                            }\n                        } else if(urlOrRegexp instanceof RegExp) {\n                            if(patterns.whitelist.every(p => p.toString() !== urlOrRegexp.toString())) {\n                                return urlOrRegexp\n                            }\n                        }\n                        return null\n                    })\n                    .filter(Boolean)\n            ]\n        }\n    }\n\n\n    // Parse existing tags with a marked type\n    const tags = document.querySelectorAll(`script[type=\"${TYPE_ATTRIBUTE}\"], *[${HIDDEN_SRC_ATTRIBUTE}]`)\n    for(let i = 0; i < tags.length; i++) {\n        const elem = tags[i]\n        if(willBeUnblocked(elem)) {\n            backupElements.blacklisted.push([elem, 'application/javascript'])\n            elem.parentElement.removeChild(elem)\n        }\n    }\n\n    // Exclude 'whitelisted' scripts from the blacklist and append them to <head>\n    let indexOffset = 0;\n    [...backupElements.blacklisted].forEach(([elem, type], index) => {\n        if(willBeUnblocked(elem)) {\n            const tagName = elem.tagName.toLowerCase();\n            const elementNode = document.createElement(tagName)\n            const stashedSrc = elem.getAttribute(HIDDEN_SRC_ATTRIBUTE);\n\n            if (elementNode.tagName != 'IFRAME') {\n                if (stashedSrc) {\n                    //console.log('Unstashing', stashedSrc);\n                    elementNode.setAttribute('src', stashedSrc)\n                } else {\n                    //console.log('resetting', elem.src);\n                    elementNode.setAttribute('type', type || 'application/javascript')\n                    elementNode.setAttribute('src', elem.src)\n                }\n\n                for (let key in elem) {\n                    if (key.startsWith(\"on\")) {\n                        elementNode[key] = elem[key]\n                    }\n                }\n                // insert into head\n                document.head.appendChild(elementNode)\n            }\n\n            // Restore iframe and remove placeholder\n            else {\n                let blockedIframes = document.querySelectorAll('div.iframe-blocked[data-src]')\n                for (let i = 0; i < blockedIframes.length; i++) {\n                    if ( ! elem.src && elem.getAttribute('yett-src')) {\n                        elem.src = elem.getAttribute('yett-src')\n                    }\n                    if (blockedIframes[i].getAttribute('data-src') == elem.src) {\n                        // Insert iframe at placeholder position\n                        blockedIframes[i].parentElement && blockedIframes[i].parentElement.insertBefore(elem, blockedIframes[i])\n                        // Remove placeholder\n                        blockedIframes[i].parentElement && blockedIframes[i].parentElement.removeChild(blockedIframes[i])\n\n                    }\n                }\n            }\n\n            backupElements.blacklisted.splice(index - indexOffset, 1)\n            indexOffset++\n        }\n    })\n\n    // Disconnect the observer if the blacklist is empty for performance reasons\n    if(patterns.blacklist && patterns.blacklist.length < 1) {\n        observer.disconnect()\n    }\n}\n"],"names":["isOnBlacklist","src","type","TYPE_ATTRIBUTE","isBlacklistedSource","willBeUnblocked","script","getAttribute","patterns","blacklist","every","entry","test","whitelist","some","HIDDEN_SRC_ATTRIBUTE","window","YETT_BLACKLIST","YETT_WHITELIST","features","YETT_IFRAME","YETT_IFRAME_BLOCKED_TEXT","YETT_IFRAME_BLOCKED_BTN","backupElements","blacklisted","srcStart","undefined","toString","split","pattern","observer","MutationObserver","mutations","i","length","addedNodes","node","nodeType","tagName","push","addEventListener","beforeScriptExecuteListener","event","preventDefault","removeEventListener","iframePlaceholder","document","createElement","setAttribute","style","cssText","defaultView","getComputedStyle","backgroundColor","display","alignItems","justifyContent","width","height","maxWidth","classList","add","innerHTML","parentElement","insertBefore","removeChild","observe","documentElement","childList","subtree","createElementBackup","originalDescriptors","HTMLScriptElement","Object","getOwnPropertyDescriptor","prototype","args","toLowerCase","descriptors","bind","mockElt","defineProperties","get","call","this","set","value","typeValue","name","error","console","warn","URL_REPLACER_REGEXP","RegExp","scriptUrlsOrRegexes","filter","urlOrRegexp","map","permissiveRegexp","replace","p","Boolean","tags","querySelectorAll","elem","indexOffset","forEach","index","elementNode","stashedSrc","key","startsWith","head","appendChild","blockedIframes","splice","disconnect"],"mappings":"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"}